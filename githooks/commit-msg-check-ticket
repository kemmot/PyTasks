#!/bin/bash
#
# An example hook script to check the commit log message.
# Called by "git commit" with one argument, the name of the file
# that has the commit message.  The hook should exit with non-zero
# status after issuing an appropriate message if it wants to stop the
# commit.  The hook is allowed to edit the commit message file.
#
# To enable this hook, rename this file to "commit-msg".

# Uncomment the below to add a Signed-off-by line to the message.
# Doing this in a hook is a bad idea in general, but the prepare-commit-msg
# hook is more suited to it.
#
# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\(.*>\).*$/Signed-off-by: \1/p')
# grep -qs "^$SOB" "$1" || echo "$SOB" >> "$1"

echo "Not checking branch name"
exit 0


branch_name=$(git branch | grep '\*')
branch_name=${branch_name:2:100}
expected_prefix="$branch_name: "
actual_prefix=$(sed -n "/^$expected_prefix/p;q" $1)
if [ ${#actual_prefix} -gt 0 ]; then
	exit 0
else
	echo "Expected branch name as commit prefix: [$expected_prefix]"
	exit 1
fi

